/*
 * This file is generated by jOOQ.
 */
package com.fenrir.core.database.tables.records;


import com.fenrir.core.database.tables.Startup;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StartupRecord extends TableRecordImpl<StartupRecord> implements Record2<String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.startup.name</code>.
     */
    public StartupRecord setName(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.startup.name</code>.
     */
    public String getName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.startup.value</code>.
     */
    public StartupRecord setValue(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.startup.value</code>.
     */
    public String getValue() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Startup.STARTUP.NAME;
    }

    @Override
    public Field<String> field2() {
        return Startup.STARTUP.VALUE;
    }

    @Override
    public String component1() {
        return getName();
    }

    @Override
    public String component2() {
        return getValue();
    }

    @Override
    public String value1() {
        return getName();
    }

    @Override
    public String value2() {
        return getValue();
    }

    @Override
    public StartupRecord value1(String value) {
        setName(value);
        return this;
    }

    @Override
    public StartupRecord value2(String value) {
        setValue(value);
        return this;
    }

    @Override
    public StartupRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StartupRecord
     */
    public StartupRecord() {
        super(Startup.STARTUP);
    }

    /**
     * Create a detached, initialised StartupRecord
     */
    public StartupRecord(String name, String value) {
        super(Startup.STARTUP);

        setName(name);
        setValue(value);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised StartupRecord
     */
    public StartupRecord(com.fenrir.core.database.tables.pojos.Startup value) {
        super(Startup.STARTUP);

        if (value != null) {
            setName(value.getName());
            setValue(value.getValue());
            resetChangedOnNotNull();
        }
    }
}
