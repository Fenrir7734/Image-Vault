/*
 * This file is generated by jOOQ.
 */
package com.fenrir.core.database.tables.records;


import com.fenrir.core.database.tables.Users;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record12<Long, String, String, String, String, String, String, Boolean, Boolean, LocalDateTime, LocalDateTime, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.users.id</code>.
     */
    public UsersRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.users.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.users.code</code>.
     */
    public UsersRecord setCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.users.code</code>.
     */
    public String getCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.users.auth_type</code>.
     */
    public UsersRecord setAuthType(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.users.auth_type</code>.
     */
    public String getAuthType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.users.external_id</code>.
     */
    public UsersRecord setExternalId(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.users.external_id</code>.
     */
    public String getExternalId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.users.external_name</code>.
     */
    public UsersRecord setExternalName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.users.external_name</code>.
     */
    public String getExternalName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.users.name</code>.
     */
    public UsersRecord setName(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.users.name</code>.
     */
    public String getName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.users.email</code>.
     */
    public UsersRecord setEmail(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.users.email</code>.
     */
    public String getEmail() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.users.verified</code>.
     */
    public UsersRecord setVerified(Boolean value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.users.verified</code>.
     */
    public Boolean getVerified() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>public.users.enabled</code>.
     */
    public UsersRecord setEnabled(Boolean value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.users.enabled</code>.
     */
    public Boolean getEnabled() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>public.users.updated_at</code>.
     */
    public UsersRecord setUpdatedAt(LocalDateTime value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.users.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>public.users.created_at</code>.
     */
    public UsersRecord setCreatedAt(LocalDateTime value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.users.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for <code>public.users.role_id</code>.
     */
    public UsersRecord setRoleId(Long value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>public.users.role_id</code>.
     */
    public Long getRoleId() {
        return (Long) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<Long, String, String, String, String, String, String, Boolean, Boolean, LocalDateTime, LocalDateTime, Long> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<Long, String, String, String, String, String, String, Boolean, Boolean, LocalDateTime, LocalDateTime, Long> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Users.USERS.ID;
    }

    @Override
    public Field<String> field2() {
        return Users.USERS.CODE;
    }

    @Override
    public Field<String> field3() {
        return Users.USERS.AUTH_TYPE;
    }

    @Override
    public Field<String> field4() {
        return Users.USERS.EXTERNAL_ID;
    }

    @Override
    public Field<String> field5() {
        return Users.USERS.EXTERNAL_NAME;
    }

    @Override
    public Field<String> field6() {
        return Users.USERS.NAME;
    }

    @Override
    public Field<String> field7() {
        return Users.USERS.EMAIL;
    }

    @Override
    public Field<Boolean> field8() {
        return Users.USERS.VERIFIED;
    }

    @Override
    public Field<Boolean> field9() {
        return Users.USERS.ENABLED;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return Users.USERS.UPDATED_AT;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return Users.USERS.CREATED_AT;
    }

    @Override
    public Field<Long> field12() {
        return Users.USERS.ROLE_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCode();
    }

    @Override
    public String component3() {
        return getAuthType();
    }

    @Override
    public String component4() {
        return getExternalId();
    }

    @Override
    public String component5() {
        return getExternalName();
    }

    @Override
    public String component6() {
        return getName();
    }

    @Override
    public String component7() {
        return getEmail();
    }

    @Override
    public Boolean component8() {
        return getVerified();
    }

    @Override
    public Boolean component9() {
        return getEnabled();
    }

    @Override
    public LocalDateTime component10() {
        return getUpdatedAt();
    }

    @Override
    public LocalDateTime component11() {
        return getCreatedAt();
    }

    @Override
    public Long component12() {
        return getRoleId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCode();
    }

    @Override
    public String value3() {
        return getAuthType();
    }

    @Override
    public String value4() {
        return getExternalId();
    }

    @Override
    public String value5() {
        return getExternalName();
    }

    @Override
    public String value6() {
        return getName();
    }

    @Override
    public String value7() {
        return getEmail();
    }

    @Override
    public Boolean value8() {
        return getVerified();
    }

    @Override
    public Boolean value9() {
        return getEnabled();
    }

    @Override
    public LocalDateTime value10() {
        return getUpdatedAt();
    }

    @Override
    public LocalDateTime value11() {
        return getCreatedAt();
    }

    @Override
    public Long value12() {
        return getRoleId();
    }

    @Override
    public UsersRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UsersRecord value2(String value) {
        setCode(value);
        return this;
    }

    @Override
    public UsersRecord value3(String value) {
        setAuthType(value);
        return this;
    }

    @Override
    public UsersRecord value4(String value) {
        setExternalId(value);
        return this;
    }

    @Override
    public UsersRecord value5(String value) {
        setExternalName(value);
        return this;
    }

    @Override
    public UsersRecord value6(String value) {
        setName(value);
        return this;
    }

    @Override
    public UsersRecord value7(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UsersRecord value8(Boolean value) {
        setVerified(value);
        return this;
    }

    @Override
    public UsersRecord value9(Boolean value) {
        setEnabled(value);
        return this;
    }

    @Override
    public UsersRecord value10(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public UsersRecord value11(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public UsersRecord value12(Long value) {
        setRoleId(value);
        return this;
    }

    @Override
    public UsersRecord values(Long value1, String value2, String value3, String value4, String value5, String value6, String value7, Boolean value8, Boolean value9, LocalDateTime value10, LocalDateTime value11, Long value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(Long id, String code, String authType, String externalId, String externalName, String name, String email, Boolean verified, Boolean enabled, LocalDateTime updatedAt, LocalDateTime createdAt, Long roleId) {
        super(Users.USERS);

        setId(id);
        setCode(code);
        setAuthType(authType);
        setExternalId(externalId);
        setExternalName(externalName);
        setName(name);
        setEmail(email);
        setVerified(verified);
        setEnabled(enabled);
        setUpdatedAt(updatedAt);
        setCreatedAt(createdAt);
        setRoleId(roleId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(com.fenrir.core.database.tables.pojos.Users value) {
        super(Users.USERS);

        if (value != null) {
            setId(value.getId());
            setCode(value.getCode());
            setAuthType(value.getAuthType());
            setExternalId(value.getExternalId());
            setExternalName(value.getExternalName());
            setName(value.getName());
            setEmail(value.getEmail());
            setVerified(value.getVerified());
            setEnabled(value.getEnabled());
            setUpdatedAt(value.getUpdatedAt());
            setCreatedAt(value.getCreatedAt());
            setRoleId(value.getRoleId());
            resetChangedOnNotNull();
        }
    }
}
